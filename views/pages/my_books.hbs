


<main>





  <ul class="book-list">
    {{#each books}}
    <li class="card col-sm-2">
      <h4 class="card-title">{{this.book_name}} <span style="color:#fff;background-color: #832323;padding:1px 8px;position:absolute;top:50px;right:10px;font-size:15px">{{this.student_id}}</span></h4>
      <form action="/products/{{this.book_name}}" method="post">
          <button type="submit" class="btn btn-primary delete" alert="are you sure!! ?" style="position: absolute;right: 10px;top: 20px;background-color: rgba(145, 18, 18, 0);border:none;color:rgb(99, 9, 9);color: #832323;font-weight:1000;">X</button>

        </form>
      <img class="card-img-top " src="{{this.image_link}}" alt="Card image">
      <div class="image-container" style="position:absolute;left:60%;top:40%">
          <img src="/images/stamp.png" style="width: 100px;height:100px;">
          <div class="overlay">{{this.genre}}</div>
        </div>
      <div class="card-body">
        
        <p class="card-text" style="font-weight: 500;letter-spacing:2px;padding:5px;background:#ad0c0ca1;text-align:center;border-radius:50px">This book was written by {{this.author}}</p>


      </div>
      

    </li>
    {{/each}}
  </ul>
</main>
<style>
  .image-container {
    position: relative;
    display: inline-block;
    /* Ensures the container only takes up as much space as the image */
  }

  .overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(-20deg);
    /* Center the text and rotate it */
    background-color: rgba(255, 255, 255, 0);
    color: rgb(151, 10, 10);
    font-weight: 1000;
    /* Semi-transparent background */

    /* Adjust as needed */
    font-size: 15px;
    /* Adjust as needed */
  }
</style>
<style>
  .book-list {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    flex-wrap: wrap;
    gap: 3%;
    align-items: center;
    justify-content: center;
  }



  .book-list {
    list-style: none;
    padding-top: 2rem;
    margin: 0;
  }

  .card {
    margin-bottom: 2rem;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    overflow: hidden;
    width: 300px;
    padding: 1rem;
    padding-bottom: 5px;
    transition: 0.5s;
  }

  .card:hover {
    background: linear-gradient(0deg, rgba(224, 218, 218, 0), #08c2275b,rgb(224, 218, 218));
    ;
    color: #fff;
    transform-style: preserve-3d;
    box-shadow: -0px 0px 1px 0px #17cf6469,
      inset -5px 0px 10px 0px #17cf6469;


  }
  .card:hover .card-img-top {
     filter: blur(0px);
    
  }

  .card-img-top {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: 0.35s;
    filter: blur(10px);
  }

  .card-body {
    padding: 15px;
  }

  .card-title {
    margin-bottom: 10px;
    text-transform: uppercase;
    font-size: 1.2rem;
    color: rgb(129, 13, 13);
    padding: 10px;
    margin-left: -15  px;
    border-bottom: 1px  solid red;
  }
</style>
<script>
  // Get all delete buttons
  const deleteButtons = document.querySelectorAll('.delete');

  // Loop through delete buttons and add event listener
  deleteButtons.forEach(button => {
    button.addEventListener('mouseenter', function () {
      // Find parent card element
      const card = button.closest('.card');
      // Change background color of card using linear gradient
      card.style.background = 'linear-gradient(0deg, transparent, #ff0000a8, transparent)';
      // Add box shadow to card
      card.style.boxShadow = 'inset -5px 0px 10px 0px #991313d8';
    });

    // Reset background color and box shadow when mouse leaves button
    button.addEventListener('mouseleave', function () {
      // Find parent card element
      const card = button.closest('.card');
      // Reset background color of card
      card.style.background = '';
      // Reset box shadow of card
      card.style.boxShadow = '';
    });
  });
</script>